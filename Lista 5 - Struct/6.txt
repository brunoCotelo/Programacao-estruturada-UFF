/*Escreva uma função que receba duas structs do tipo dma, cada uma representando uma data
válida, e devolva o número de dias que decorreram entre as duas datas.*/

#include <stdio.h>
#include <stdlib.h>

struct DMA {
int dia;
int mes;
int ano;
};
typedef struct DMA dma;

int bissexto (int ano);
unsigned long dist_dias (dma inicio, dma fim);

int dias_mes[2][13] = {{0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31},
                       {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}};


void preencheData(dma *datas){
	printf("\nDigite uma data (dd/mm/aaaa)");
	scanf("%d/%d/%d", &datas->dia, &datas->mes, &datas->ano);
}


int bissexto (int ano) {
	return (ano % 4 == 0) && ((ano % 100 != 0) || (ano % 400 == 0));
}

unsigned long dist_dias (dma inicio, dma fim) {
	unsigned long idias, fdias;	
	unsigned long def_anos = 0;	
	register int i;
	int dbissexto;
	idias = inicio.dia;
	dbissexto = bissexto (inicio.ano);
	for (i = inicio.mes - 1; i > 0; --i)
		idias += dias_mes[dbissexto][i];
	fdias = fim.dia;
	dbissexto = bissexto (fim.ano);
	for (i = fim.mes - 1; i > 0; --i)
		fdias += dias_mes[dbissexto][i];
	while (inicio.ano < fim.ano)
		def_anos += 365 + bissexto(inicio.ano++);
	return def_anos - idias + fdias;
}

int main(){
	int anos;
	dma data1, data2;
	preencheData(&data1);
	printf("\n %d / %d / %d", data1.dia, data1.mes, data1.ano);
	preencheData(&data2);
	printf("\n %d / %d / %d", data2.dia, data2.mes, data2.ano);
	printf("A distancia em dias: %lu\n", dist_dias (data1, data2));
}